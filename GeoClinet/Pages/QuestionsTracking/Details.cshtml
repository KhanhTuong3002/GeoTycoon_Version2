@page
@model GeoClinet.Pages.QuestionsTracking.DetailsModel
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Details";
}

<div class="container mx-auto">

    <h1 class="text-3xl font-bold mb-4">Details</h1>


    <div class="bg-base-200 p-4 rounded-lg shadow-lg">
        <div class="grid grid-cols-2 gap-4 mb-4">
            <div class="form-control mb-2">
                <label class="label">
                    <span class="label-text font-semibold">Action</span>
                </label>
                <div class="p-2 bg-base-100 rounded">
                    @Html.DisplayFor(model => model.Tracking.Action)
                </div>
            </div>
            <div>
                <div class="form-control mb-2">
                    <label class="label">
                        <span class="label-text font-semibold">Created At</span>
                    </label>
                    <div class="p-2 bg-base-100 rounded">
                        @Html.DisplayFor(model => model.Tracking.CreatedAt)
                    </div>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-2 gap-4">
            <div>
                <h2 class="text-xl font-semibold mb-2">Old Values</h2>
                <table class="table w-full">
                    <thead>
                        <tr>
                            <th class="bg-base-300">Property</th>
                            <th class="bg-base-300">Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            if (!string.IsNullOrEmpty(Model.Tracking.OldValues))
                            {
                                try
                                {
                                    var oldValues = JsonConvert.DeserializeObject<Dictionary<string, object>>(Model.Tracking.OldValues);
                                    foreach (var item in oldValues)
                                    {
                                        <tr>
                                            <td class="bg-base-100">@item.Key</td>
                                            <td class="bg-base-100">@item.Value</td>
                                        </tr>
                                    }
                                }
                                catch (JsonException ex)
                                {
                                    <tr>
                                        <td colspan="2" class="bg-base-100 text-red">No Value is displayed</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="2" class="bg-base-100">No old values available</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div>
                <h2 class="text-xl font-semibold mb-2">New Values</h2>
                <table class="table w-full">
                    <thead>
                        <tr>
                            <th class="bg-base-300">Property</th>
                            <th class="bg-base-300">Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            if (!string.IsNullOrEmpty(Model.Tracking.NewValues) && Model.Tracking.NewValues != "No value")
                            {
                                try
                                {
                                    var newValues = JsonConvert.DeserializeObject<Dictionary<string, object>>(Model.Tracking.NewValues);
                                    foreach (var item in newValues)
                                    {
                                        <tr>
                                            <td class="bg-base-100">@item.Key</td>
                                            <td class="bg-base-100">@item.Value</td>
                                        </tr>
                                    }
                                }
                                catch (JsonException ex)
                                {
                                    <tr>
                                        <td colspan="2" class="bg-base-100 text-red-500">Error parsing new values: @ex.Message</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="2" class="bg-base-100">No new values available</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
@*     <div class="mt-4">
        <a asp-page="./Index" class="btn btn-primary">Back to List</a>
    </div> *@

</div>
