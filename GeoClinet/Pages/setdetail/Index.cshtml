@page
@model GeoClient.Pages.setdetail.IndexModel

@{
    ViewData["Title"] = "List of Set Question Details";
}

<div class="content">
    <div class="container w-[90%] mx-auto py-8 mb-8 items-center justify-center">
        <div class="flex justify-between items-center mb-8">
            <h2 class="text-2xl font-bold mb-4">@ViewData["Title"]</h2>
            <button class="btn btn-success" onclick="openAddDetailModal()">
                <img src="~/css/plus-circle.svg" class="mr-2" />
                <span class="text-white">Create New Set Question Detail</span>
            </button>
        </div>

        <!-- Search Form -->
        <form method="get" class="m-xl-auto">
            <div class="flex">
                <div class="mr-8">
                    <input id="searchInput" type="text" name="SearchTerm" value="@Model.SearchTerm" placeholder="Search Set Name Ctrl + K" class="input input-bordered w-64 md:w-auto" />
                </div>
                <div class="pt-4">
                </div>
            </div>
            <input type="submit" value="Search" style="display:none;" />
            <script>
                document.addEventListener('keydown', function (event) {
                    if (event.ctrlKey && event.key === 'k') {
                        event.preventDefault();
                        document.getElementById('searchInput').focus();
                    }
                });
            </script>
        </form>


        <!-- Set Question Details Table -->
        <div class="w-full mt-8">
            @if (Model.SetQuestionDetails != null && Model.SetQuestionDetails.Any())
            {
                <table class="table w-full rounded-box table-auto">
                    <thead>
                        <tr>
                            <th class="font-semibold p-4 relative pr-6 text-left">Set Name</th>
                            <th class="font-semibold p-4 relative pr-6 text-left">Title</th>
                            <th class="font-semibold p-4 relative pr-6 text-left">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.SetQuestionDetails)
                        {
                            <tr class="bg-base-100 hover">
                                <td class="font-semibold p-4 relative pr-6 break-words">@item.SetQuestion.SetName</td>
                                <td class="font-semibold p-4 relative pr-6 break-words">@item.Question.Title</td>
                                <td class="flex flex-grow font-semibold p-4 relative pr-6 break-words">
                                    <button class="mr-2" onclick="openEditDetailModal(this)" data-id="@item.Id" data-setquestionid="@item.SetQuestionId" data-questionid="@item.QuestionId">
                                        <i data-feather="edit" aria-hidden="true" class="text-success text-2xl"></i>
                                    </button>
                                    <button onclick="openDeleteDetailModal('@item.Id')">
                                        <i data-feather="trash-2" aria-hidden="true" class="text-error text-2xl"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No set question details found.</p>
            }
        </div>
    </div>
</div>

<!-- Add Detail Dialog -->
<dialog id="addDetailModal" class="modal">
    <form method="post" asp-page-handler="AddDetail" class="modal-box" id="addForm">
        <h3 class="font-bold text-lg">Add New Set Question Detail</h3>
        <div id="add-error" class="text-danger"></div>
        <div class="form-control">
            <label class="label">Set Name</label>
            <select name="SetQuestionDetail.SetQuestionId" class="select select-bordered" required>
                @foreach (var setQuestion in Model.SetQuestions)
                {
                    <option value="@setQuestion.Id">@setQuestion.SetName</option>
                }
            </select>
        </div>
        <div class="form-control">
            <label class="label">Title</label>
            <select name="SetQuestionDetail.QuestionId" class="select select-bordered" required>
                @foreach (var question in Model.Questions)
                {
                    <option value="@question.Id">@question.Title</option>
                }
            </select>
        </div>
        <span asp-validation-for="SetQuestionDetail.QuestionId" class="text-danger"></span>
        <div class="modal-action">
            <button type="submit" class="btn btn-primary">Add</button>
            <button type="button" class="btn" onclick="closeAddDetailModal()">Cancel</button>
        </div>
    </form>
</dialog>

<!-- Edit Detail Dialog -->
<dialog id="editDetailModal" class="modal">
    <form method="post" asp-page-handler="EditDetail" class="modal-box" id="editForm">
        <h3 class="font-bold text-lg">Edit Set Question Detail</h3>
        <input type="hidden" name="SetQuestionDetail.Id" id="edit-detail-id">
        <div id="edit-error" class="text-danger"></div>
        <div class="form-control">
            <label class="label">Set Name</label>
            <select name="SetQuestionDetail.SetQuestionId" id="edit-detail-setquestionid" class="select select-bordered" required>
                @foreach (var setQuestion in Model.SetQuestions)
                {
                    <option value="@setQuestion.Id">@setQuestion.SetName</option>
                }
            </select>
        </div>
        <div class="form-control">
            <label class="label">Title</label>
            <select name="SetQuestionDetail.QuestionId" id="edit-detail-questionid" class="select select-bordered" required>
                @foreach (var question in Model.Questions)
                {
                    <option value="@question.Id">@question.Title</option>
                }
            </select>
        </div>
        <div class="modal-action">
            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" class="btn" onclick="closeEditDetailModal()">Cancel</button>
        </div>
    </form>
</dialog>

<!-- Delete Detail Confirmation Dialog -->
<dialog id="deleteDetailModal" class="modal">
    <form method="post" asp-page-handler="DeleteDetail" class="modal-box">
        <h3 class="font-bold text-lg">Are you sure you want to delete?</h3>
        <input type="hidden" name="id" id="delete-detail-id">
        <div class="modal-action">
            <button type="submit" class="btn btn-danger">Yes</button>
            <button type="button" class="btn" onclick="closeDeleteDetailModal()">No</button>
        </div>
    </form>
</dialog>

<script>
    function openAddDetailModal() {
        document.getElementById('addDetailModal').showModal();
    }

    function closeAddDetailModal() {
        document.getElementById('add-error').innerText = '';
        document.getElementById('addForm').reset();
        document.getElementById('addDetailModal').close();
    }

    function openEditDetailModal(button) {
        var id = button.getAttribute('data-id');
        var setQuestionId = button.getAttribute('data-setquestionid');
        var questionId = button.getAttribute('data-questionid');

        document.getElementById('edit-detail-id').value = id;
        document.getElementById('edit-detail-setquestionid').value = setQuestionId;
        document.getElementById('edit-detail-questionid').value = questionId;
        document.getElementById('editDetailModal').showModal();
    }

    function closeEditDetailModal() {
        document.getElementById('edit-error').innerText = '';
        document.getElementById('editForm').reset();
        document.getElementById('editDetailModal').close();
    }

    function openDeleteDetailModal(id) {
        document.getElementById('delete-detail-id').value = id;
        document.getElementById('deleteDetailModal').showModal();
    }

    function closeDeleteDetailModal() {
        document.getElementById('deleteDetailModal').close();
    }

    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('addForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Ngăn chặn gửi yêu cầu mặc định của form

            var form = event.target;
            var formData = new FormData(form);

            fetch(form.action, {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(errors => Promise.reject(errors));
                    }
                    return response;
                })
                .then(() => {
                    closeAddDetailModal(); // Đảm bảo đúng tên hàm đóng modal
                    location.reload(); // Làm mới trang sau khi thêm thành công
                })
                .catch(errors => {
                    var errorMessages = Object.values(errors).join('\n');
                    document.getElementById('add-error').innerText = errorMessages;
                });
        });

        document.getElementById('editForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Ngăn chặn gửi yêu cầu mặc định của form

            var form = event.target;
            var formData = new FormData(form);

            fetch(form.action, {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(errors => Promise.reject(errors));
                    }
                    return response;
                })
                .then(() => {
                    closeEditDetailModal(); // Đảm bảo đúng tên hàm đóng modal
                    location.reload(); // Làm mới trang sau khi chỉnh sửa thành công
                })
                .catch(errors => {
                    var errorMessages = Object.values(errors).join('\n');
                    document.getElementById('edit-error').innerText = errorMessages;
                });
        });
    });
</script>
